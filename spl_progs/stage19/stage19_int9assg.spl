alias userSP R0;
alias fileName R1;

[PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE+1] * 16) + 13] = SP;
SP =  [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 11] * 512 - 1 ;

[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 9;

userSP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 13];
fileName = [[PTBR + 2*(userSP - 4)/512]*512 + (userSP - 4)%512];

alias i R2;
alias flag R3;
alias index R10;

i = 0;
flag = 0;

while(i < MAX_FILE_NUM) do
	if([INODE_TABLE + i*16] == EXEC && [INODE_TABLE + i*16 + 1] == fileName) then
		index = i;
		flag = 1;
		break;			
	endif;
	i = i+1;
endwhile;

if(flag == 0) then
	[[PTBR + 2*(userSP - 1)/512]*512 + (userSP - 1)%512] = -1;
	SP = userSP;
	ireturn;
endif;

[[PTBR+(2*(userSP-1))/512]*512 + (userSP-1)%512] = 0;

backup;
alias functionNum R1;
functionNum = 3;
R2 = [SYSTEM_STATUS_TABLE + 1];
call MOD_1;
restore;

alias user_page R5;
user_page = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 11];

[MEMORY_FREE_LIST + user_page] = [MEMORY_FREE_LIST + user_page] + 1;

[SYSTEM_STATUS_TABLE + 2] = [SYSTEM_STATUS_TABLE + 2] - 1;

SP = user_page*512 - 1;

[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 4] = RUNNING;
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 7] = index;

PTBR = PAGE_TABLE_BASE + 20*[SYSTEM_STATUS_TABLE + 1];

//library
[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

backup;

//HEAP

[PTBR+4] = -1;
[PTBR+5] = "0000";


[PTBR+6] = -1;
[PTBR+7] = "0000";

//STACK
R1 = GET_FREE_PAGE;
call  MOD_2;
[PTBR+16] = R0;
[PTBR+17] = "0110";

R1 = GET_FREE_PAGE;
call  MOD_2;
[PTBR+18] = R0;
[PTBR+19] = "0110";

restore;

//CODE
breakpoint;
if([INODE_TABLE+index*16+8]!=-1) then	
	backup;
	R1 = GET_CODE_PAGE;
	R2 = [INODE_TABLE + index*16 + 8];
	call  MOD_2;
	[PTBR+8] = R0;
	[PTBR+9] = "0100";
	restore;

	
endif;
        [PTBR+10] = -1;
	[PTBR+11] = "0000";
	
	[PTBR+12] = -1;
	[PTBR+13] = "0000";
	
	[PTBR+14] = -1;
	[PTBR+15] = "0000";
	

i = 496;

while(i <= 510) do
	[user_page*512 + i] = -1;
	i = i+2;
endwhile;
i=0;
while(i<10)do
	[DISK_MAP_TABLE+[SYSTEM_STATUS_TABLE+1]*10+i]=-1;
	i=i+1;
endwhile;
[DISK_MAP_TABLE+[SYSTEM_STATUS_TABLE+1]*10+4] = [INODE_TABLE+index*16+8];
[DISK_MAP_TABLE+[SYSTEM_STATUS_TABLE+1]*10+5] = [INODE_TABLE+index*16+9];
[DISK_MAP_TABLE+[SYSTEM_STATUS_TABLE+1]*10+6] = [INODE_TABLE+index*16+10];
[DISK_MAP_TABLE+[SYSTEM_STATUS_TABLE+1]*10+7] = [INODE_TABLE+index*16+11];

[[PTBR+16]*512] = [[PTBR+8]*512+1];

SP = 8*512;

[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 0;
breakpoint;
ireturn;

